- name: Maintenance
  hosts: control
  become: true
  gather_facts: true

  vars:
    safe_update_list: ["*"]

  pre_tasks:
    - name: Update Package Metadata
      ansible.builtin.package:
        update_cache: true
      changed_when: false

  tasks:
    - name: Upgrade All Packages
      ansible.builtin.package:
        name: "{{ safe_update_list }}"
        state: latest
      register: pkg_upgrade

    - name: Detect Kernel changed_when
      ansible.builtin.set_fact:
        kernel_changed: "{{ (pkg_upgrade.results | default([])) | selectattr('name','search','^kernel') | list | length > 0 }}"

    - name: Reboot
      when: kernel_changed | bool
      ansible.builtin.reboot:
        msg: "Ansible Triggered Reboot"
        reboot_timeout: 900

    - name: Maintenance Service - Unit File
      ansible.builtin.copy:
        dest: /etc/systemd/journald.conf.d/10-persistent.conf
        content: |
          [Unit]
          Description = Ansible maintenance
          Wants = network-online.target
          After = network-online.target

          [Service]
          Type = oneshot
          ExecStart = /usr/bin/flock -n /var/run/ansible-maint.lock \
          /tank/appdata/ansible/.venv/bin/ansible-playbook /tank/appdata/ansible/playbooks/maintenance.yml -l localhost
          WorkingDirectory = /tank/appdata/ansible

    - name: Maintenance Service - Timer
      ansible.builtin.copy:
        dest: /etc/systemd/system/ansible-maint.timer
        content: |
          [Unit]
          Description= Ansible Maintenance Weekly

          [Timer]
          OnCalendar=Weekly
          RandomizedDelaySec=900
          Persistent=true

          [Install]
          WantedBy=timers.target

        notify: 

  post_tasks:
    - name: Summary
      ansible.builtin.debug:
        msg:
          - "Packages changed: {{ pkg_upgrade.changed | default(false) }}"
          - "Kernel changed: {{ kernel_changed | default(false) }}"